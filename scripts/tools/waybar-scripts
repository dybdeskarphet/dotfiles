#!/bin/bash
termwin="alacritty -e zsh -c"

sync_icon() {
  total="$(cat /tmp/total_backup.dat 2>/dev/null)"
  current="$(cat /tmp/current_backup.dat 2>/dev/null)"
  # uncomment this if you want to show it as a percentage
  # percentage="$(echo "$current/$total*100" | bc -l | cut -d '.' -f 1)%"
  if systemctl is-active --quiet backupDrive.service; then
    # uncomment this if you want to show it as a percentage
    # echo "%{F$accent}󰘿  %{F$foreground}$percentage"
    echo "󰘿  <span foreground=\"#ffffff\">${current:=0}</span> <span foreground=\"#6fd07c\">/</span> <span foreground=\"#ffffff\">${total}</span>"
  elif [[ -f /tmp/not-recognized.backup ]]; then
    echo "󰅤"
  else
    echo
  fi
}

mic_icon() {
  CARD_INDEX=1
  CONTROL_NAME='Capture'
  mic_status=$(amixer -c $CARD_INDEX sget $CONTROL_NAME | grep -o "\[[a-z]*\]")

  if [[ $mic_status == *"[off]" ]]; then
    echo "%{B#$accent}%{F#000000}  󰍭  %{B- F-}%{O-9}"
  else
    echo
  fi
}

do_not_disturb() {
  if [[ "$(dunstctl is-paused)" = "true" ]]; then
    echo "󰂛"
  else
    echo ""
  fi
}

check_updates() {
  if ! updates_arch=$(checkupdates 2>/dev/null | wc -l); then
    updates_arch=0
  fi

  if ! updates_aur=$(paru -Qum 2>/dev/null | wc -l); then
    # if ! updates_aur=$(paru -Qum 2> /dev/null | wc -l); then
    # if ! updates_aur=$(cower -u 2> /dev/null | wc -l); then
    # if ! updates_aur=$(trizen -Su --aur --quiet | wc -l); then
    # if ! updates_aur=$(pikaur -Qua 2> /dev/null | wc -l); then
    # if ! updates_aur=$(rua upgrade --printonly 2> /dev/null | wc -l); then
    updates_aur=0
  fi

  updates=$((updates_arch + updates_aur))

  if [ "$updates" -gt 0 ]; then
    echo "󰏗 <span foreground=\"#ffffff\">$updates</span>"
  else
    echo ""
  fi
}

copy_date() {
  if wl-copy $(date "+%F"); then
    dunstify -a "Waybar" -r 9326 -i clipit-trayicon -t 5000 "tarih panoya kopyalandı!" "koplyanan tarih: '$(date +"%F")'"
  else
    dunstify -a "Waybar" -r 9326 -i clipit-trayicon -t 5000 "tarih kopyalanırken hata ile karşılaşıldı!" "scripti kontorl edin."
  fi
}

gpu_usage() {
  echo "󰹑 <span foreground=\"#ffffff\">$(cat /sys/class/hwmon/hwmon3/device/gpu_busy_percent)%</span>"

}

nethogs_command() {
  alacritty -e bash -c '
  read -p "Are you sure you want to run nethogs? (y/n) " -n 1 -r
    echo # (optional) move to a new line
    if [[ $REPLY =~ ^[Yy]$ ]]; then
      printf "\e[1mEnter your password to monitor the network activity:\e[0m\n" &&
      sudo nethogs
    fi
  '
}

bt_toggle() {
  if [ $(bluetoothctl show | grep "Powered: yes" | wc -c) -eq 0 ]; then
    bluetoothctl power on
  else
    bluetoothctl power off
  fi
}

case $1 in
sync_icon) sync_icon ;;
mic_icon) mic_icon ;;
do_not_disturb) do_not_disturb ;;
sync_icon_click) $termwin "watch -c -n 0.5 tail -n 50 $HOME/.cache/logs/backupDrive.log" ;;
gpu_click) $termwin "radeontop; zsh" ;;
copy_date) copy_date ;;
nethogs_command) nethogs_command ;;
gpu_usage) gpu_usage ;;
htop_cpu) $termwin "htop -t --sort-key PERCENT_CPU" ;;
htop_mem) $termwin "htop -t --sort-key PERCENT_MEM" ;;
check_updates) check_updates ;;
open_update_screen) $termwin "printf '%b\n\n' '\e[1mEnter your password to update Pacman/AUR packages:\e[0m' && sudo paru -Syu; zsh" ;;
bt_toggle) bt_toggle ;;
*) echo "Don't use this script from your terminal." ;;
esac
