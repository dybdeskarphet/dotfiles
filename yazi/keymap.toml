# A TOML linter such as https://taplo.tamasfe.dev/ can use this schema to validate your config.
# If you encounter any issues, please make an issue at https://github.com/yazi-rs/schemas.
"$schema" = "https://yazi-rs.github.io/schemas/keymap.json"

[manager]

keymap = [
  { on = "<Esc>", run = "escape", desc = "Exit visual mode, clear selected, or cancel search" },
  { on = "<C-[>", run = "escape", desc = "Exit visual mode, clear selected, or cancel search" },
  { on = "q", run = "quit", desc = "Exit the process" },
  { on = "Q", run = "quit --no-cwd-file", desc = "Exit the process without writing cwd-file" },
  { on = "<C-c>", run = "close", desc = "Close the current tab, or quit if it is last tab" },
  { on = "<C-z>", run = "suspend", desc = "Suspend the process" },

  # Hopping
  { on = "k", run = "arrow -1", desc = "Move cursor up" },
  { on = "j", run = "arrow 1", desc = "Move cursor down" },

  { on = "<Up>", run = "arrow -1", desc = "Move cursor up" },
  { on = "<Down>", run = "arrow 1", desc = "Move cursor down" },

  { on = "<C-u>", run = "arrow -50%", desc = "Move cursor up half page" },
  { on = "<C-d>", run = "arrow 50%", desc = "Move cursor down half page" },
  { on = "<C-b>", run = "arrow -100%", desc = "Move cursor up one page" },
  { on = "<C-f>", run = "arrow 100%", desc = "Move cursor down one page" },

  { on = "<S-PageUp>", run = "arrow -50%", desc = "Move cursor up half page" },
  { on = "<S-PageDown>", run = "arrow 50%", desc = "Move cursor down half page" },
  { on = "<PageUp>", run = "arrow -100%", desc = "Move cursor up one page" },
  { on = "<PageDown>", run = "arrow 100%", desc = "Move cursor down one page" },

  { on = [
    "g",
    "g",
  ], run = "arrow top", desc = "Move cursor to the top" },
  { on = "G", run = "arrow bot", desc = "Move cursor to the bottom" },

  # Navigation
  { on = "h", run = "leave", desc = "Go back to the parent directory" },
  { on = "l", run = "plugin smart-enter", desc = "Enter the child directory" },
  { on = "<Left>", run = "leave", desc = "Go back to the parent directory" },
  { on = "<Right>", run = "enter", desc = "Enter the child directory" },
  { on = "H", run = "back", desc = "Go back to the previous directory" },
  { on = "L", run = "forward", desc = "Go forward to the next directory" },

  # Seeking
  { on = "K", run = "seek -5", desc = "Seek up 5 units in the preview" },
  { on = "J", run = "seek 5", desc = "Seek down 5 units in the preview" },

  # Spot the hovered object
  { on = "<Tab>", run = "spot", desc = "Spot hovered file" },

  # Selection
  { on = "<Space>", run = [
    "toggle --state=none",
    "arrow 1",
  ], desc = "Toggle the current selection state" },
  { on = "<S-v>", run = "visual_mode", desc = "Enter visual mode (selection mode)" },
  { on = "<S-V>", run = "visual_mode --unset", desc = "Enter visual mode (unset mode)" },
  { on = "<C-a>", run = "toggle_all --state=true", desc = "Select all files" },
  { on = "v", run = "toggle_all --state=none", desc = "Inverse selection of all files" },

  # Operation
  { on = "<Enter>", run = "open", desc = "Open selected files" },
  { on = "<S-Enter>", run = "open --interactive", desc = "Open selected files interactively" },
  { on = "y", run = [
    '''
	shell -- for path in "$@"; do echo "file://$path"; done | wl-copy -t text/uri-list
''',
    "yank",
  ], desc = "Yank selected files and copy the file URI to clipboard" },
  { on = "x", run = "yank --cut", desc = "Yank selected files (cut)" },
  { on = "p", run = "paste", desc = "Paste yanked files" },
  { on = "P", run = "paste --force", desc = "Paste yanked files (overwrite if the destination exists)" },
  { on = "_", run = "link", desc = "Symlink the absolute path of yanked files" },
  { on = "Y", run = "unyank", desc = "Cancel the yank status" },
  { on = "X", run = "unyank", desc = "Cancel the yank status" },
  { on = "<A-Esc>", run = "unyank", desc = "Cancel the yank status" },
  { on = [
    "d",
    "d",
  ], run = '''shell --confirm -- gtrash put "$@"''', desc = "Trash selected files" },
  { on = [
    "d",
    "x",
  ], run = "remove --permanently", desc = "Permanently delete selected files" },
  { on = "a", run = "create --dir", desc = "Create a folder" },
  { on = "A", run = "create", desc = "Create a file" },
  { on = ";", run = "shell --interactive", desc = "Run a shell command" },
  { on = ":", run = "shell --block --interactive", desc = "Run a shell command (block until finishes)" },
  { on = "<Backspace>", run = "hidden toggle", desc = "Toggle the visibility of hidden files" },
  { on = "s", run = "search fd", desc = "Search files by name using fd" },
  { on = "S", run = "search rg", desc = "Search files by content using ripgrep" },
  { on = "<C-s>", run = "escape --search", desc = "Cancel the ongoing search" },
  { on = "z", run = "plugin zoxide", desc = "Jump to a directory using zoxide" },
  { on = "Z", run = "plugin fzf", desc = "Jump to a directory or reveal a file using fzf" },
  ## Rename Operations
  { on = [
    "r",
    "r",
  ], run = "rename --cursor=before_ext", desc = "Rename selected file(s)" },
  { on = [
    "r",
    "s",
  ], run = "rename --hovered --empty=stem --cursor=start", desc = "Change the stem of selected file" },
  { on = [
    "r",
    "e",
  ], run = "rename --hovered --empty=ext --cursor=end", desc = "Change the extension of selected file" },
  # Copy
  { on = [
    "c",
    "c",
  ], run = "copy path", desc = "Copy the file path" },
  { on = [
    "c",
    "d",
  ], run = "copy dirname", desc = "Copy the directory path" },
  { on = [
    "c",
    "f",
  ], run = "copy filename", desc = "Copy the filename" },
  { on = [
    "c",
    "e",
  ], run = "copy name_without_ext", desc = "Copy the filename without extension" },

  # Filter
  { on = "f", run = "filter --smart", desc = "Filter files" },

  # Find
  { on = "/", run = "find --smart", desc = "Find next file" },
  { on = "?", run = "find --previous --smart", desc = "Find previous file" },
  { on = "n", run = "find_arrow", desc = "Go to the next found" },
  { on = "N", run = "find_arrow --previous", desc = "Go to the previous found" },

  # Sorting
  { on = [
    "o",
    "m",
  ], run = [
    "sort mtime --reverse=no",
    "linemode mtime",
  ], desc = "Sort by modified time" },
  { on = [
    "o",
    "M",
  ], run = [
    "sort mtime --reverse",
    "linemode mtime",
  ], desc = "Sort by modified time (reverse)" },
  { on = [
    "o",
    "c",
  ], run = [
    "sort btime --reverse=no",
    "linemode ctime",
  ], desc = "Sort by created time" },
  { on = [
    "o",
    "C",
  ], run = [
    "sort btime --reverse",
    "linemode ctime",
  ], desc = "Sort by created time (reverse)" },
  { on = [
    "o",
    "e",
  ], run = "sort extension --reverse=no", desc = "Sort by extension" },
  { on = [
    "o",
    "E",
  ], run = "sort extension --reverse", desc = "Sort by extension (reverse)" },
  { on = [
    "o",
    "a",
  ], run = "sort alphabetical --reverse=no", desc = "Sort alphabetically" },
  { on = [
    "o",
    "A",
  ], run = "sort alphabetical --reverse", desc = "Sort alphabetically (reverse)" },
  { on = [
    "o",
    "n",
  ], run = "sort natural --reverse=no", desc = "Sort naturally" },
  { on = [
    "o",
    "N",
  ], run = "sort natural --reverse", desc = "Sort naturally (reverse)" },
  { on = [
    "o",
    "s",
  ], run = [
    "sort size --reverse=no",
    "linemode size",
  ], desc = "Sort by size" },
  { on = [
    "o",
    "S",
  ], run = [
    "sort size --reverse",
    "linemode size",
  ], desc = "Sort by size (reverse)" },
  { on = [
    "o",
    "r",
  ], run = "sort random --reverse=no", desc = "Sort randomly" },

  # Goto
  { on = [
    "g",
    "h",
  ], run = "cd ~", desc = "Home directory" },
  { on = [
    "g",
    "C",
  ], run = "cd ~/.config", desc = ".config directory" },
  { on = [
    "g",
    "d",
  ], run = "cd ~/dl", desc = "Downloads" },
  { on = [
    "g",
    "<Space>",
  ], run = "cd --interactive", desc = "Go to a directory interactively" },

  # Tabs
  { on = "t", run = "tab_create --current", desc = "Create a new tab with CWD" },

  { on = "1", run = "tab_switch 0", desc = "Switch to the first tab" },
  { on = "2", run = "tab_switch 1", desc = "Switch to the second tab" },
  { on = "3", run = "tab_switch 2", desc = "Switch to the third tab" },
  { on = "4", run = "tab_switch 3", desc = "Switch to the fourth tab" },
  { on = "5", run = "tab_switch 4", desc = "Switch to the fifth tab" },
  { on = "6", run = "tab_switch 5", desc = "Switch to the sixth tab" },
  { on = "7", run = "tab_switch 6", desc = "Switch to the seventh tab" },
  { on = "8", run = "tab_switch 7", desc = "Switch to the eighth tab" },
  { on = "9", run = "tab_switch 8", desc = "Switch to the ninth tab" },

  { on = "[", run = "tab_switch -1 --relative", desc = "Switch to the previous tab" },
  { on = "]", run = "tab_switch 1 --relative", desc = "Switch to the next tab" },

  { on = "{", run = "tab_swap -1", desc = "Swap current tab with previous tab" },
  { on = "}", run = "tab_swap 1", desc = "Swap current tab with next tab" },

  # Tasks
  { on = "w", run = "tasks_show", desc = "Show task manager" },

  # Help
  { on = "~", run = "help", desc = "Open help" },
  { on = "<F1>", run = "help", desc = "Open help" },

  # Uso Sudo
  { on = [
    "R",
    "p",
    "p",
  ], run = "plugin sudo -- paste", desc = "sudo paste" },
  { on = [
    "R",
    "P",
  ], run = "plugin sudo -- paste -f", desc = "sudo paste" },
  { on = [
    "R",
    "r",
  ], run = "plugin sudo -- rename", desc = "sudo rename" },
  { on = [
    "R",
    "p",
    "l",
  ], run = "plugin sudo -- link", desc = "sudo link" },
  { on = [
    "R",
    "p",
    "L",
  ], run = "plugin sudo -- link -r", desc = "sudo link relative path" },
  { on = [
    "R",
    "a",
  ], run = "plugin sudo -- create", desc = "sudo create" },
  { on = [
    "R",
    "d",
  ], run = "plugin sudo -- remove", desc = "sudo trash" },
  { on = [
    "R",
    "D",
  ], run = "plugin sudo -- remove -P", desc = "sudo delete" },
]

prepend_keymap = [
  # Relative motions plugin
  { on = "1", run = "plugin relative-motions -- 1", desc = "Move in relative steps" },
  { on = "2", run = "plugin relative-motions -- 2", desc = "Move in relative steps" },
  { on = "3", run = "plugin relative-motions -- 3", desc = "Move in relative steps" },
  { on = "4", run = "plugin relative-motions -- 4", desc = "Move in relative steps" },
  { on = "5", run = "plugin relative-motions -- 5", desc = "Move in relative steps" },
  { on = "6", run = "plugin relative-motions -- 6", desc = "Move in relative steps" },
  { on = "7", run = "plugin relative-motions -- 7", desc = "Move in relative steps" },
  { on = "8", run = "plugin relative-motions -- 8", desc = "Move in relative steps" },
  { on = "9", run = "plugin relative-motions -- 9", desc = "Move in relative steps" },

  { on = "T", run = "plugin toggle-pane max-preview", desc = "Maximize or restore preview pane" },

  # Fuzzy finder and ripgrep
  { on = [
    "f",
    "G",
  ], run = "plugin fg", desc = "find file by content (fuzzy match)" },
  { on = [
    "f",
    "g",
  ], run = "plugin fg -- rg", desc = "find file by content (ripgrep match)" },

  { on = [
    "f",
    "f",
  ], run = "plugin fg -- fzf", desc = "find file by filename" },
  { on = "<C-f>", run = "plugin fg  -- fzf", desc = "find file by filename" },

  # dragon-drop 
  { on = "<C-n>", run = '''
  shell --confirm -- dragon-drop -x -a -T "$@"
  ''', desc = "Open with dragon (drag-and-drop)" },
  { on = [
    "c",
    "n",
  ], run = '''
  shell --confirm -- dragon-drop -x -a -T "$@"
  ''', desc = "Open with dragon (drag-and-drop)" },
  { on = [
    "c",
    "N",
  ], run = '''
  shell --orpan --confirm -- cp -r "$(dragon-drop -t -p -x)" .
  ''', desc = "Open current directory with dragon as target (drag-and-drop)" },
  # send with qrcp
  { on = [
    "c",
    "p",
  ], run = '''
  shell --confirm --block -- qrcp --interface wlan0 "$@"
  ''', desc = "Send with qrcp" },
  # compress with ouch
  { on = [
    "C",
    "z",
  ], run = "plugin ouch -- zip", desc = "Compress to .zip with Ouch" },
  { on = [
    "C",
    "t",
  ], run = "plugin ouch -- tar.gz", desc = "Compress to .tar with Ouch" },
  { on = [
    "c",
    "m",
  ], run = "plugin chmod", desc = "Chmod on selected files" },
]


[tasks]

keymap = [
  { on = "<Esc>", run = "close", desc = "Close task manager" },
  { on = "<C-[>", run = "close", desc = "Close task manager" },
  { on = "<C-c>", run = "close", desc = "Close task manager" },
  { on = "w", run = "close", desc = "Close task manager" },

  { on = "k", run = "arrow -1", desc = "Move cursor up" },
  { on = "j", run = "arrow 1", desc = "Move cursor down" },

  { on = "<Up>", run = "arrow -1", desc = "Move cursor up" },
  { on = "<Down>", run = "arrow 1", desc = "Move cursor down" },

  { on = "<Enter>", run = "inspect", desc = "Inspect the task" },
  { on = "x", run = "cancel", desc = "Cancel the task" },

  # Help
  { on = "~", run = "help", desc = "Open help" },
  { on = "<F1>", run = "help", desc = "Open help" },
]

[spot]

keymap = [
  { on = "<Esc>", run = "close", desc = "Close the spot" },
  { on = "<C-[>", run = "close", desc = "Close the spot" },
  { on = "<C-c>", run = "close", desc = "Close the spot" },
  { on = "<Tab>", run = "close", desc = "Close the spot" },

  { on = "k", run = "arrow -1", desc = "Move cursor up" },
  { on = "j", run = "arrow 1", desc = "Move cursor down" },
  { on = "h", run = "swipe -1", desc = "Swipe to the next file" },
  { on = "l", run = "swipe 1", desc = "Swipe to the previous file" },

  { on = "<Up>", run = "arrow -1", desc = "Move cursor up" },
  { on = "<Down>", run = "arrow 1", desc = "Move cursor down" },
  { on = "<Left>", run = "swipe -1", desc = "Swipe to the next file" },
  { on = "<Right>", run = "swipe 1", desc = "Swipe to the previous file" },

  # Copy
  { on = ["c", "c"], run = "copy cell", desc = "Copy selected cell" },

  # Help
  { on = "~", run = "help", desc = "Open help" },
  { on = "<F1>", run = "help", desc = "Open help" },
]

[pick]

keymap = [
  { on = "<Esc>", run = "close", desc = "Cancel pick" },
  { on = "<C-[>", run = "close", desc = "Cancel pick" },
  { on = "<C-c>", run = "close", desc = "Cancel pick" },
  { on = "<Enter>", run = "close --submit", desc = "Submit the pick" },

  { on = "k", run = "arrow -1", desc = "Move cursor up" },
  { on = "j", run = "arrow 1", desc = "Move cursor down" },

  { on = "<Up>", run = "arrow -1", desc = "Move cursor up" },
  { on = "<Down>", run = "arrow 1", desc = "Move cursor down" },

  # Help
  { on = "~", run = "help", desc = "Open help" },
  { on = "<F1>", run = "help", desc = "Open help" },
]

[completion]

keymap = [
  { on = "<C-c>", run = "close", desc = "Cancel completion" },
  { on = "<Tab>", run = "close --submit", desc = "Submit the completion" },
  { on = "<Enter>", run = [
    "close --submit",
    "close_input --submit",
  ], desc = "Submit the completion and input" },

  { on = "<A-k>", run = "arrow -1", desc = "Move cursor up" },
  { on = "<A-j>", run = "arrow 1", desc = "Move cursor down" },

  { on = "<Up>", run = "arrow -1", desc = "Move cursor up" },
  { on = "<Down>", run = "arrow 1", desc = "Move cursor down" },

  { on = "<C-p>", run = "arrow -1", desc = "Move cursor up" },
  { on = "<C-n>", run = "arrow 1", desc = "Move cursor down" },

  # Help
  { on = "~", run = "help", desc = "Open help" },
  { on = "<F1>", run = "help", desc = "Open help" },
]

[help]

keymap = [
  { on = "<Esc>", run = "escape", desc = "Clear the filter, or hide the help" },
  { on = "<C-[>", run = "escape", desc = "Clear the filter, or hide the help" },
  { on = "<C-c>", run = "close", desc = "Hide the help" },

  # Navigation
  { on = "k", run = "arrow -1", desc = "Move cursor up" },
  { on = "j", run = "arrow 1", desc = "Move cursor down" },

  { on = "<Up>", run = "arrow -1", desc = "Move cursor up" },
  { on = "<Down>", run = "arrow 1", desc = "Move cursor down" },

  # Filtering
  { on = "f", run = "filter", desc = "Apply a filter for the help items" },
]

[[input.prepend_keymap]]
on = "<Esc>"
run = "close"
desc = "Cancel input"
